demos-python: &demos-python
  name: Run demos (Python, serial)
  command: |
    cd Scripts/python
    python3 ./understanding_mesh_workflow.py

demos-cpp: &demos-cpp
  name: Run demos (CPP, serial)
  command: |
    cd Scripts/cpp/mesh-workflow
    mkdir build
    cd build
    cmake ..
    make
    ./demo_mesh_workflow 

build-dolfin: &build-dolfin
  name: Build xdmf-mvc branch of dolfinx (CPP, Python, serial)
  command: |
    sh rebuild_dolfin.sh

install-meshio: &install-meshio
  name: Install xdmf-mvc branch of meshio
  command: |
    sh install-meshio.sh

new-mesh-workflow: &new-mesh-workflow
  name: Run new-mesh-workflow (CPP, Python, serial)
  command: |
    cd Scripts/cpp/mesh-workflow-new
    mkdir build
    cd build
    cmake ..
    make
    ./demo_mesh_workflow 
    cd ../../../python
    python3 new_mesh_workflow.py


list-files: &list-files
  name: Get folder tree
  command: |
    ls

pull-submodules: &pull-submodules
  name: "Pull Submodules"
  command: |
    git submodule init
    git submodule update --remote

version: 2
jobs:
  build:
    docker: # use the docker executor type; machine and macos executors are also supported
      - image: quay.io/fenicsproject/dolfinx:real # the primary container, where your job's commands are run
    steps:
      - checkout # check out the code in the project directory
      - run: *list-files
      - run: *pull-submodules
      - run: *demos-python
      - run: *demos-cpp
      - run: *install-meshio
      - run: *build-dolfin
      - run: *new-mesh-workflow
